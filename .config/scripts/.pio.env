# BUILDSPACE ENV VARS (relative)  
REMOTE_HOST_IP="192.168.1.105"  #CUSTOMIZE
SSH_DEST_ADDR="$USER@$REMOTE_HOST_IP"  # remote device to send BIN files to
ESP_PROJECT_ROOT_NAME="esp-fw"
PROJECT_LIB_NAME="esp32-toolkit-lib"
PROJECT_PIO_ENV="esp32s3" # esp32-latest #esp32s3
PROJECT_LIB_PATH="lib/$PROJECT_LIB_NAME"
PIO_DOWNLOAD_URL="https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py"
PIO_CONFIG_PATH="$PROJECT_LIB_PATH/.config/platformio.ini"
GIT_MODULES_PATH="$PROJECT_LIB_PATH/.config/.gitmodules"
FIRMWARE_SRC="$PROJECT_LIB_PATH/examples/firmware-main.cpp"
PIO_BUILD_DIR=".pio/build/$PROJECT_PIO_ENV"
FW_BIN="$PIO_BUILD_DIR/firmware.bin"
FS_IMG="$PIO_BUILD_DIR/littlefs.bin"
BOOTLOADER_BIN="$PIO_BUILD_DIR/bootloader.bin"
PARTITIONS_BIN="$PIO_BUILD_DIR/partitions.bin"
PIO_INSTALL_DIR="/home/$USER/.platformio"
BOOT_BIN_SUBPATH=".platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin"
BOOT_BIN="/home/$USER/$BOOT_BIN_SUBPATH"
PATH=$PATH:$PIO_INSTALL_DIR/penv/bin

# HOSTS ENV VARS (absolute) 
# requires PROJECTS_HOME, PROJECTS_DATA defined externally 
ESP_PIO_INSTALL_DIR="$PROJECTS_HOME/.platformio"
ESP_PROJECT_DIR="$PROJECTS_DATA/esp/$ESP_PROJECT_ROOT_NAME"
ESP_FW_BIN="$ESP_PROJECT_DIR/$FW_BIN"
ESP_FS_IMG="ESP_PROJECT_DIR/$FS_IMG"
ESP_BOOTLOADER_BIN="$ESP_PROJECT_DIR/$BOOTLOADER_BIN"
ESP_PARTITIONS_BIN="$ESP_PROJECT_DIR/$PARTITIONS_BIN"
ESP_BOOT_BIN="$PROJECTS_HOME/$BOOT_BIN_SUBPATH"
ESPTOOL_INSTALL_PATH=`which esptool.py`
ESPTOOL_CMDARGS="--chip esp32 --port /dev/ttyUSB0 --baud 460800 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 40m --flash_size 4MB"

# RUN FROM BUILDENV COMMANDS  (coder workspace)
alias pio-install='curl -fsSL $PIO_DOWNLOAD_URL -o get-platformio.py && python3 get-platformio.py '
alias pio-install-rules='curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules'
alias pio-init-workspace='ln -s $PIO_CONFIG_PATH platformio.ini &&\
    ln -s $GIT_MODULES_PATH  .gitmodules &&\
    mkdir src && ln -s ../$FIRMWARE_SRC src/main.cpp'
alias pio-build-fw='pio run -e $PROJECT_PIO_ENV'
alias pio-build-fs='pio run -e $PROJECT_PIO_ENV -t buildfs '
alias pio-upload-fw='pio run -e $PROJECT_PIO_ENV -t upload'
alias pio-upload-fs='pio run -e $PROJECT_PIO_ENV -t uploadfs'
alias pio-send-fw-bin='scp $FW_BIN $SSH_DEST_ADDR:~/'
alias pio-send-fs-img='scp $FS_IMG $SSH_DEST_ADDR:~/'
alias pio-send-other-bins='scp $BOOTLOADER_BIN $PARTITIONS_BIN $BOOT_BIN $SSH_DEST_ADDR:~/'
alias pio-build-send-fw='pio-build-fw && pio-send-fw-bin'

# RUN FROM HOST COMMANDS (pyEnv)
alias esptool='$ESPTOOL_INSTALL_PATH --chip esp32 --port /dev/ttyUSB0 --baud 460800 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 40m --flash_size 4MB '
alias esp-upload-fw='esptool 0x10000 $ESP_FW_BIN'
alias esp-upload-fs='esptool 0x290000 $ESP_FS_IMG'
alias esp-upload-others='esptool 0x1000 $ESP_BOOTLOADER_BIN 0x8000 $ESP_PARTITIONS_BIN 0xe000 $ESP_BOOT_BIN'

